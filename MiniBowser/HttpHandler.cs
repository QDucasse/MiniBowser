using System;
using System.Net.Http;
using System.Text.RegularExpressions;
using System.Threading.Tasks;


namespace MiniBowser
{
    public class HttpHandler : HttpClient
    {

        public async Task<HttpData> RequestHTTPResponse(string url)
        {
            HttpData responseData = new HttpData();

            // Call asynchronous network methods in a try/catch block to handle exceptions.
            try
            {
                HttpResponseMessage response = await GetAsync(url);
                // response.EnsureSuccessStatusCode();
                string responseBody = await response.Content.ReadAsStringAsync();
                responseData = new HttpData(response.StatusCode.ToString(), responseBody);
                return responseData;
            }
            catch (HttpRequestException e)
            {
                Console.WriteLine("\nException Caught!");
                Console.WriteLine("Message :{0} ", e.Message);
            }

            return responseData;

        }

        public string RequestStringResult(string url)
        {
            Match m = Regex.Match(url, @"https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)");
            if (m.Success)
            {
                HttpData requestRes = new HttpData();
                Task<HttpData> taskRes = RequestHTTPResponse(url);
                requestRes = taskRes.Result;
                // display html content(tostring)
                Console.WriteLine(taskRes);
                return requestRes.ToString();
            }
            else
            {
                return "Incorrect URL";
            }
        }
    }

    public class HttpData
    {
        // Instance Variables
        // Auto generated by the properties

        // Accessors
        public string StatusCode
        { get; set; }

        public string HtmlTitle
        { get; set; }

        public string HtmlBody
        { get; set; }

        // Constructors
        public HttpData(string statusCode, string htmlBody)
        {
            StatusCode = statusCode;
            HtmlBody = htmlBody;
            Match m = Regex.Match(htmlBody, @"<title>\s*(.+?)\s*</title>");
            if (m.Success)
            {
                HtmlTitle =  m.Groups[1].Value;
            }
            else
            {
                HtmlTitle = "";
            }
        }

        public HttpData()
        {
            StatusCode = "No request made";
            HtmlBody = "No body";
        }

        // Methods
        public override string ToString()
        {
            return string.Format("STATUS CODE: {0}\n\nHTML TITLE: {1}\n\nHTML CONTENT:\n{2}", StatusCode, HtmlTitle, HtmlBody);
        }
    }
}
